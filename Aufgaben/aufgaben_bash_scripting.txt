Erstellen sie ein Script, das einen Parameter entgegennimmt und checkt ob es eine Datei gibt, die so heißt wie der übergebene Parameter.
Aufruf: ./test.sh test.txt
Erweiterung: Die Eingabeaufforderung soll so lange gezeigt werden, bis der benutzer ein q eingibt, oder einen vorhandenen Dateinamen.

if [[ $1 ]]
then
	abfrage=$1
else
read -p "Ihre Eingabe:" abfrage
echo "Die Eingabe lautet: $abfrage"
fi
if [[ -e $abfrage ]]
then
	echo "Der Eintrag ist vorhanden: $abfrage"
else
	echo "Ist nicht vorhanden"

fi

#2.
#Programmieren Sie einen Taschenrechner. 
#In einer Eingabeforderung wird der Benutzer aufgefordert eine Zahl einzugeben. 
#Diese Zahl wird zur vorher eingegebenen Zahl hinzuaddiert. 
#Das Ergebnis wird ausgegeben und der Benutzer wird erneut zur Eingabe einer Zahl aufgefordert. 
#Das Endergebnis wird ausgegeben, wenn der User die Zeichenfolge 'exit' eingibt. 
#Die erste Eingabeaufforderung lautet: 'Geben Sie die 1. Zhal ein:'. 
#Die fünfte Eingabeaufforderung lautet:'Bisher wurden 4 Zahlen eingegeben. 
#Das Zwischenergebnis lautet: 22. Geben Sie eine weitere Zahl ein, oder beenden Sie mit exit.' 
#Nach der Eingabe von exit lautet die Konsolenausgabe: 
#'Endergebnis: 33. Das Programm wurde beendet.' 
#Wird etwas anderes als eine Zahl eingegeben gibt das Programm aus: 
#'Falsche Eingabe: xxx kann nicht addiert werden. Geben Sie ausschließlich Zahlen ein.'


3.
Speichern sie das Datum in einer Variable
Speichern sie den ersten Parameter nach der Eingabeaufforderung in die Variable topic
Erzeugen sie einen Dateinamen, nach dem folgenden Muster: /home/theo/<parameter>
notes.txt. Nutzen Sie die Variable topic und die systemimmanente Variable für das
Home-Verzeichnis des aktuellen Users.
Erzeugen Sie die Eingabeaufforderung: "Notiz:" und speichern Sie die Eingabe das Users
in der Datei mit Datumsangabe